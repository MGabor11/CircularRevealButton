apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'com.github.mgabor11'
version = '0.2.1'

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-debug.aar") // replace with your library name
            groupId this.group
            artifactId 'library' // replace with your library artifact id
            version this.version
            pom {
                name = 'library'
                description = 'An Android UI lib for circular reveal animation'
                // If your project has a dedicated site, use its URL here
                url = 'https://github.com/MGabor11/CircularRevealButton'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mgabor11'
                        name = 'Gabor Marosfalvi'
                        email = 'marosfalvi.gabor@gmail.com'
                    }
                }
                // Version control info, if you're using GitHub, follow the format as seen here
                scm {
                    connection = 'scm:git:github.com/MGabor11/CircularRevealButton.git'
                    developerConnection = 'scm:git:https://github.com/MGabor11/CircularRevealButton.git'
                    url = 'https://github.com/MGabor11/CircularRevealButton/tree/master'
                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included in the pom.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

tasks.withType(Javadoc).all {
    enabled = false
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def properties = new Properties()
properties.load(new FileInputStream("local.properties"))

bintray {
    def gpgpassphrase = properties.getProperty("bintray.gpg.password")
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['Production']
    configurations = ['archives']
    dryRun = false
    override = true
    publish = true
    pkg {
        repo = 'CircularRevealButton'
        name = 'com.github.mgabor11'

        version {
            name = this.version
            desc = "Version ${this.version}"
            released = new Date()
            vcsTag = this.version
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = gpgpassphrase
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

apply from: 'https://raw.githubusercontent.com/sky-uk/gradle-maven-plugin/master/gradle-mavenizer.gradle'
